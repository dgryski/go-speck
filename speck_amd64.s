// Generated by PeachPy 0.2.0 from speck.py


// func EncryptASM(pt_base uintptr, pt_len int64, pt_cap int64, ct_base uintptr, ct_len int64, ct_cap int64, k_base uintptr, k_len int64, k_cap int64)
TEXT ·EncryptASM(SB),4,$0-72
	MOVQ pt_base+0(FP), AX
	MOVQ 0(AX), BX
	MOVQ 8(AX), AX
	MOVQ k_base+48(FP), CX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 0(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 8(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 16(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 24(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 32(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 40(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 48(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 56(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 64(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 72(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 80(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 88(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 96(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 104(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 112(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 120(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 128(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 136(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 144(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 152(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 160(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 168(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 176(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 184(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 192(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 200(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 208(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 216(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 224(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 232(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 240(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ 248(CX), AX
	ROLQ $3, BX
	XORQ AX, BX
	MOVQ ct_base+24(FP), CX
	MOVQ BX, 0(CX)
	MOVQ AX, 8(CX)
	RET

// func ExpandEncryptASM(pt_base uintptr, pt_len int64, pt_cap int64, ct_base uintptr, ct_len int64, ct_cap int64, k_base uintptr, k_len int64, k_cap int64)
TEXT ·ExpandEncryptASM(SB),4,$0-72
	MOVQ pt_base+0(FP), AX
	MOVQ 0(AX), BX
	MOVQ 8(AX), AX
	MOVQ k_base+48(FP), CX
	MOVQ 0(CX), DX
	MOVQ 8(CX), CX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $0, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $1, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $2, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $3, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $4, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $5, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $6, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $7, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $8, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $9, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $10, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $11, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $12, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $13, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $14, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $15, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $16, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $17, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $18, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $19, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $20, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $21, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $22, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $23, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $24, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $25, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $26, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $27, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $28, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $29, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	RORQ $8, CX
	ADDQ DX, CX
	XORQ $30, CX
	ROLQ $3, DX
	XORQ CX, DX
	RORQ $8, AX
	ADDQ BX, AX
	XORQ DX, AX
	ROLQ $3, BX
	XORQ AX, BX
	MOVQ ct_base+24(FP), CX
	MOVQ BX, 0(CX)
	MOVQ AX, 8(CX)
	RET
